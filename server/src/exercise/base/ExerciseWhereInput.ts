/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { DifficultyWhereUniqueInput } from "../../difficulty/base/DifficultyWhereUniqueInput";
import { StringFilter } from "../../util/StringFilter";
import { ExerciseLogListRelationFilter } from "../../exerciseLog/base/ExerciseLogListRelationFilter";
import { GoalListRelationFilter } from "../../goal/base/GoalListRelationFilter";
import { TrainingPlanListRelationFilter } from "../../trainingPlan/base/TrainingPlanListRelationFilter";
@InputType()
class ExerciseWhereInput {
  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  description?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => DifficultyWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => DifficultyWhereUniqueInput)
  @IsOptional()
  @Field(() => DifficultyWhereUniqueInput, {
    nullable: true,
  })
  difficulty?: DifficultyWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  equipmentNeeded?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => ExerciseLogListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ExerciseLogListRelationFilter)
  @IsOptional()
  @Field(() => ExerciseLogListRelationFilter, {
    nullable: true,
  })
  exerciseLogs?: ExerciseLogListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => GoalListRelationFilter,
  })
  @ValidateNested()
  @Type(() => GoalListRelationFilter)
  @IsOptional()
  @Field(() => GoalListRelationFilter, {
    nullable: true,
  })
  goals?: GoalListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  imageLink?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  name?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  targetbodyPart?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => TrainingPlanListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TrainingPlanListRelationFilter)
  @IsOptional()
  @Field(() => TrainingPlanListRelationFilter, {
    nullable: true,
  })
  trainingPlans?: TrainingPlanListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  videoLink?: StringFilter;
}
export { ExerciseWhereInput };
