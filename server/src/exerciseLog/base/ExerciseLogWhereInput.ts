/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { ExerciseWhereUniqueInput } from "../../exercise/base/ExerciseWhereUniqueInput";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { StringFilter } from "../../util/StringFilter";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { FloatNullableFilter } from "../../util/FloatNullableFilter";
import { WorkoutWhereUniqueInput } from "../../workout/base/WorkoutWhereUniqueInput";
import { WorkoutListRelationFilter } from "../../workout/base/WorkoutListRelationFilter";
@InputType()
class ExerciseLogWhereInput {
  @ApiProperty({
    required: false,
    type: () => ExerciseWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ExerciseWhereUniqueInput)
  @IsOptional()
  @Field(() => ExerciseWhereUniqueInput, {
    nullable: true,
  })
  exercise?: ExerciseWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  reps?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: FloatNullableFilter,
  })
  @Type(() => FloatNullableFilter)
  @IsOptional()
  @Field(() => FloatNullableFilter, {
    nullable: true,
  })
  sets?: FloatNullableFilter;

  @ApiProperty({
    required: false,
    type: FloatNullableFilter,
  })
  @Type(() => FloatNullableFilter)
  @IsOptional()
  @Field(() => FloatNullableFilter, {
    nullable: true,
  })
  weight?: FloatNullableFilter;

  @ApiProperty({
    required: false,
    type: () => WorkoutWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => WorkoutWhereUniqueInput)
  @IsOptional()
  @Field(() => WorkoutWhereUniqueInput, {
    nullable: true,
  })
  workout?: WorkoutWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => WorkoutListRelationFilter,
  })
  @ValidateNested()
  @Type(() => WorkoutListRelationFilter)
  @IsOptional()
  @Field(() => WorkoutListRelationFilter, {
    nullable: true,
  })
  workouts?: WorkoutListRelationFilter;
}
export { ExerciseLogWhereInput };
