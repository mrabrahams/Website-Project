/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { ExerciseLogWhereUniqueInput } from "../../exerciseLog/base/ExerciseLogWhereUniqueInput";
import { ExerciseLogListRelationFilter } from "../../exerciseLog/base/ExerciseLogListRelationFilter";
import { StringFilter } from "../../util/StringFilter";
import { TrainingPlanWhereUniqueInput } from "../../trainingPlan/base/TrainingPlanWhereUniqueInput";
@InputType()
class WorkoutWhereInput {
  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  date?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: () => ExerciseLogWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ExerciseLogWhereUniqueInput)
  @IsOptional()
  @Field(() => ExerciseLogWhereUniqueInput, {
    nullable: true,
  })
  exerciseLog?: ExerciseLogWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => ExerciseLogListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ExerciseLogListRelationFilter)
  @IsOptional()
  @Field(() => ExerciseLogListRelationFilter, {
    nullable: true,
  })
  exerciseLogs?: ExerciseLogListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => TrainingPlanWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TrainingPlanWhereUniqueInput)
  @IsOptional()
  @Field(() => TrainingPlanWhereUniqueInput, {
    nullable: true,
  })
  trainingPlan?: TrainingPlanWhereUniqueInput;
}
export { WorkoutWhereInput };
